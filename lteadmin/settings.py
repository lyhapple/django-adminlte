# coding=utf-8

"""
Django settings for lteadmin project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
#django 中文路径.解决
import sys
reload(sys)
sys.setdefaultencoding("utf-8")

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g!*lu021!*lrk*&8hr-etf(kr0xp-h^sk$%vh50dceoh)7u*q+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*', ]


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third_app
    'mptt',
    'rest_framework',
    'django_js_reverse',

    # my_app
    'core.adminlte',
    'core.registration',
    'core.messageset',
    'core.organization'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',

    'django.middleware.locale.LocaleMiddleware',

    'core.adminlte.middleware.ApiPermissionCheck',
    'core.adminlte.middleware.MenuMiddleware'
)

ROOT_URLCONF = 'lteadmin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media'
            ],
        },
    },
]

WSGI_APPLICATION = 'lteadmin.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

#TODO 此处需要连接线上数据库
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'cmdb_test',    #你的数据库名称
        'USER': 'cmdb_test_02',   #你的数据库用户名
        'PASSWORD': 'ssssss', #你的数据库密码
        'HOST': '100.66.240.100', #你的数据库主机，留空默认为localhost
        'PORT': '3306', #你的数据库端口
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

DATETIME_FORMAT = '%Y-%m-%d %H:%M:%S'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

if not DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static/')


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'

LOGIN_URL = '/auth/login/'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        # 'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.DjangoFilterBackend',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS':
        'core.adminlte.pagination.CommonPageNumberPagination',
    'PAGE_SIZE': 10,
    'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',
    'DATETIME_INPUT_FORMATS': ('%Y-%m-%d %H:%M:%S',),
    'DATE_FORMAT': '%Y-%m-%d',
    'DATE_INPUT_FORMATS': ('%Y-%m-%d',),
    'TIME_FORMAT': '%H:%M:%S',
    'TIME_INPUT_FORMATS': ('%H:%M:%S',),
    'LANGUAGES': (
        ('zh-hans', 'Simplified Chinese'),
    ),
    'LANGUAGE_CODE': 'zh-hans',
    # 'LANGUAGE_CODE': 'zh-hans',
    'NON_FIELD_ERRORS_KEY': 'detail',
}
############################################
#初始化系统默认logs 只当系统是linux的时候.才进行相关的日志初始化工作
LOGGING_stamdard_format = '[%(asctime)s][task_id:%(name)s][%(filename)s:%(lineno)d] [%(levelname)s]- %(message)s'
LOGGING_simple_format = '[%(filename)s:%(lineno)d][%(levelname)s] %(message)s'
LOGGING_request_format = '[%(asctime)s][%(status_code)s][%(request)s] %(message)s'
REST_SESSION_LOGIN = False
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,# this fixes the problem
    'formatters': {
        'standard': {#详细
            'format': LOGGING_stamdard_format
        },
        'simple': {#简单
            'format': LOGGING_simple_format
        },
        'request': {#简单
            'format': LOGGING_request_format
        },
    },
    'filters': {},
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        },
        'console':{
            'level': 'INFO',
            'class': 'logging.StreamHandler',#打印到前台
            'formatter': 'simple'
        },
        'default': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR+'/logs/','all.log'), #或者直接写路径：'c:\logs\all.log',
            'maxBytes': 1024*1024*10, # 10 MB
            'backupCount': 5,
            'formatter':'standard',
        },
        'request': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR+'/logs/','request.log'), #或者直接写路径：'c:\logs\all.log',
            'maxBytes': 1024*1024*10, # 10 MB
            'backupCount': 5,
            'formatter':'request',
        },
        'db': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR+'/logs/','db.log'), #或者直接写路径：'c:\logs\all.log',
            'maxBytes': 1024*1024*10, # 10 MB
            'backupCount': 5,
            'formatter':'standard',
        },
        'scprits_handler': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR+'/logs/','scprits.log'), #或者直接写路径：'c:\logs\all.log',
            'maxBytes': 1024*1024*10, # 10 MB
            'backupCount': 5,
            'formatter':'standard',
        },
        'web_api': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR+'/logs/','web_api.log'), #或者直接写路径：'c:\logs\all.log',
            'maxBytes': 1024*1024*10, # 10 MB
            'backupCount': 5,
            'formatter':'simple',
        },
        'web_manage': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR+'/logs/','web_manage.log'), #或者直接写路径：'c:\logs\all.log',
            'maxBytes': 1024*1024*10, # 10 MB
            'backupCount': 5,
            'formatter':'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['default','console'],
            'propagate': False,
            'level': 'DEBUG',
        },
        'django.request': {
            'handlers': ['request','default'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'scripts': { # 脚本专用日志
            'handlers': ['scprits_handler','default','console'],
            'level': 'DEBUG',
            'propagate': False
        },
        'web_api': { # 脚本专用日志
            'handlers': ['web_api','default','console'],
            'level': 'DEBUG',
            'propagate': False
        },
        'core': { # 脚本专用日志
            'handlers': ['web_manage','default','console'],
            'level': 'DEBUG',
            'propagate': False
        },
        'django.db.backends':{
            'handlers': ['db'],
            'level': 'DEBUG',
            'propagate': False
        },
    }
}